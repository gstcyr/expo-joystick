{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,kBAAkB,EAAE,YAAY,EAAgB,MAAM,mBAAmB,CAAC;AAEnF,+EAA+E;AAC/E,6CAA6C;AAC7C,OAAO,kBAAkB,MAAM,sBAAsB,CAAC;AAGtD,iCAAiC;AACjC,MAAM,CAAC,MAAM,WAAW,GAAG,kBAAkB,CAAC,WAAW,CAAC;AAC1D,MAAM,CAAC,MAAM,QAAQ,GAAG,kBAAkB,CAAC,QAAQ,CAAC;AAEpD,MAAM,OAAO,GAAG,IAAI,YAAY,CAAC,kBAAkB,IAAI,kBAAkB,CAAC,YAAY,CAAC,CAAC;AAExF,MAAM,UAAU,aAAa,CAAC,QAA0C;IACtE,OAAO,OAAO,CAAC,WAAW,CAAC,eAAe,EAAE,QAAQ,CAAC,CAAC;AACxD,CAAC;AAED,MAAM,UAAU,UAAU,CAAC,QAA6C;IACtE,OAAO,OAAO,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC,KAA0B,EAAE,EAAE;QACtE,QAAQ,CAAC;YACD,IAAI,EAAE,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC;YAClC,KAAK,EAAE,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,OAAO,CAAC;YACpC,IAAI,EAAE,CAAC,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,UAAU,CAAC;YAC1C,SAAS,EAAE,KAAK,CAAC,OAAO;YACxB,SAAS,EAAE,KAAK,CAAC,OAAO;SAC3B,CAAC,CAAC;IACT,CAAC,CAAC,CAAA;AACJ,CAAC;AAED,MAAM,UAAU,gBAAgB,CAAC,EAAE,EAAE,IAAI;IACrC,kBAAkB,CAAC,gBAAgB,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;AAClD,CAAC;AAED,MAAM,UAAU,mBAAmB;IAC/B,kBAAkB,CAAC,mBAAmB,EAAE,CAAC;AAC7C,CAAC","sourcesContent":["import { NativeModulesProxy, EventEmitter, Subscription } from 'expo-modules-core';\r\n\r\n// Import the native module. On web, it will be resolved to ExpoJoystick.web.ts\r\n// and on native platforms to ExpoJoystick.ts\r\nimport ExpoJoystickModule from './ExpoJoystickModule';\r\nimport { KeyEventPayload, MotionEventPayload, MotionEventPayload2 } from './ExpoJoystick.types';\r\n\r\n// Get the native constant value.\r\nexport const MotionEvent = ExpoJoystickModule.MotionEvent;\r\nexport const KeyEvent = ExpoJoystickModule.KeyEvent;\r\n\r\nconst emitter = new EventEmitter(ExpoJoystickModule ?? NativeModulesProxy.ExpoJoystick);\r\n\r\nexport function onButtonPress(listener: (event: KeyEventPayload) => void): Subscription {\r\n  return emitter.addListener('onButtonPress', listener);\r\n}\r\n\r\nexport function onJoyStick(listener: (event: MotionEventPayload) => void): Subscription {\r\n  return emitter.addListener('onJoyStick', (event: MotionEventPayload2) => {\r\n    listener({\r\n            LEFT: [event.AXIS_X, event.AXIS_Y],\r\n            RIGHT: [event.AXIS_Z, event.AXIS_RZ],\r\n            DPAD: [event.AXIS_HAT_X, event.AXIS_HAT_Y],\r\n            TRIGGER_L: event.AXIS_RX,\r\n            TRIGGER_R: event.AXIS_RY\r\n        });\r\n  })\r\n}\r\n\r\nexport function connectWebSocket(ip, port) {\r\n    ExpoJoystickModule.connectWebSocket(ip, port);\r\n}\r\n\r\nexport function disconnectWebSocket() {\r\n    ExpoJoystickModule.disconnectWebSocket();\r\n}"]}