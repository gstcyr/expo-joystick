{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,QAAQ,EAAC,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAC,QAAQ,EAAC,MAAM,cAAc,CAAC;AACtC,OAAO,EAAE,kBAAkB,EAAE,YAAY,EAAgB,MAAM,mBAAmB,CAAC;AAEnF,+EAA+E;AAC/E,6CAA6C;AAC7C,OAAO,kBAAkB,MAAM,sBAAsB,CAAC;AAEtD,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AAEjE,iCAAiC;AACjC,4DAA4D;AAC5D,sDAAsD;AAEtD,MAAM,OAAO,GAAG,IAAI,YAAY,CAAC,kBAAkB,IAAI,kBAAkB,CAAC,YAAY,CAAC,CAAC;AAExF,MAAM,UAAU,aAAa,CAAC,QAA0C;IACtE,OAAO,OAAO,CAAC,WAAW,CAAC,eAAe,EAAE,QAAQ,CAAC,CAAC;AACxD,CAAC;AAED,MAAM,UAAU,UAAU,CAAC,QAA6C;IACtE,OAAO,OAAO,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC,KAA0B,EAAE,EAAE;QACtE,QAAQ,CAAC;YACD,IAAI,EAAE,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE,KAAK,CAAC,MAAM,IAAI,CAAC,CAAC;YAC5C,KAAK,EAAE,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE,KAAK,CAAC,OAAO,IAAI,CAAC,CAAC;YAC9C,IAAI,EAAE,CAAC,KAAK,CAAC,UAAU,IAAI,CAAC,EAAE,KAAK,CAAC,UAAU,IAAI,CAAC,CAAC;YACpD,SAAS,EAAE,KAAK,CAAC,OAAO,IAAI,CAAC;YAC7B,SAAS,EAAE,KAAK,CAAC,OAAO,IAAI,CAAC;SAChC,CAAC,CAAC;IACT,CAAC,CAAC,CAAA;AACJ,CAAC;AAED,MAAM,UAAU,gBAAgB,CAAC,EAAE,EAAE,IAAI;IACrC,kBAAkB,CAAC,gBAAgB,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;AAClD,CAAC;AAED,MAAM,UAAU,mBAAmB;IAC/B,kBAAkB,CAAC,mBAAmB,EAAE,CAAC;AAC7C,CAAC;AACD,MAAM,UAAU,kBAAkB;IAC9B,OAAO,kBAAkB,CAAC,kBAAkB,EAAE,CAAC;AACnD,CAAC;AAOD,MAAM,UAAU,kBAAkB;IAC9B,IAAG,QAAQ,CAAC,EAAE,KAAK,SAAS;QAAE,OAAO,UAAU,CAAC;IAEhD,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC,GAAG,QAAQ,CAAC,kBAAkB,EAAE,CAAC,CAAC;IAC3D,MAAM,GAAG,GAAG,OAAO,CAAC,WAAW,CAAC,iBAAiB,EAAE,CAAC,EAAC,MAAM,EAAE,KAAK,EAAuB,EAAE,EAAE;QACzF,SAAS,CAAC,MAAM,CAAC,CAAC;QAClB,OAAO,GAAG,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;IAC9B,CAAC,CAAC,CAAA;IACF,OAAO,MAAM,CAAC;AAClB,CAAC;AAGD,MAAM,UAAU,4BAA4B,CAAC,OAAO,EAAE,OAAO;IACzD,kBAAkB,CAAC,4BAA4B,CAAC,OAAO,EAAE,OAAO,CAAC,CAAA;AACrE,CAAC;AAED,MAAM,UAAU,kBAAkB,CAAC,OAAO,EAAE,SAAS;IACjD,kBAAkB,CAAC,kBAAkB,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;AAC9D,CAAC;AAED,MAAM,UAAU,gBAAgB,CAAC,WAAW,EAAE,SAAS;IACnD,kBAAkB,CAAC,gBAAgB,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;AAChE,CAAC","sourcesContent":["import {useState} from \"react\";\nimport {Platform} from \"react-native\";\nimport { NativeModulesProxy, EventEmitter, Subscription } from 'expo-modules-core';\n\n// Import the native module. On web, it will be resolved to ExpoJoystick.web.ts\n// and on native platforms to ExpoJoystick.ts\nimport ExpoJoystickModule from './ExpoJoystickModule';\nimport { KeyEventPayload, MotionEventPayload, MotionEventPayload2 } from './ExpoJoystick.types';\nexport { MotionEvent, KeyEvent } from \"./ExpoJoystick.constants\";\n\n// Get the native constant value.\n//export const MotionEvent = ExpoJoystickModule.MotionEvent;\n//export const KeyEvent = ExpoJoystickModule.KeyEvent;\n\nconst emitter = new EventEmitter(ExpoJoystickModule ?? NativeModulesProxy.ExpoJoystick);\n\nexport function onButtonPress(listener: (event: KeyEventPayload) => void): Subscription {\n  return emitter.addListener('onButtonPress', listener);\n}\n\nexport function onJoyStick(listener: (event: MotionEventPayload) => void): Subscription {\n  return emitter.addListener('onJoyStick', (event: MotionEventPayload2) => {\n    listener({\n            LEFT: [event.AXIS_X || 0, event.AXIS_Y || 0],\n            RIGHT: [event.AXIS_Z || 0, event.AXIS_RZ || 0],\n            DPAD: [event.AXIS_HAT_X || 0, event.AXIS_HAT_Y || 0],\n            TRIGGER_L: event.AXIS_RX || 0,\n            TRIGGER_R: event.AXIS_RY || 0\n        });\n  })\n}\n\nexport function connectWebSocket(ip, port) {\n    ExpoJoystickModule.connectWebSocket(ip, port);\n}\n\nexport function disconnectWebSocket() {\n    ExpoJoystickModule.disconnectWebSocket();\n}\nexport function getWebSocketStatus() {\n    return ExpoJoystickModule.getWebSocketStatus();\n}\n\ntype WebSocketStatusEvent = {\n  status: string;\n  error?: string;\n};\n\nexport function useWebSocketStatus() {\n    if(Platform.OS !== 'android') return \"disabled\";\n\n    const [status, setStatus] = useState(getWebSocketStatus());\n    const sub = emitter.addListener(\"websocketStatus\", ({status, error}: WebSocketStatusEvent) => {\n        setStatus(status);\n        return () => sub.remove();\n    })\n    return status;\n}\n\n\nexport function sendButtonPressOverWebSocket(keyCode, enabled) {\n    ExpoJoystickModule.sendButtonPressOverWebSocket(keyCode, enabled)\n}\n\nexport function setButtonModifiers(keyCode, modifiers) {\n    ExpoJoystickModule.setButtonModifiers(keyCode, modifiers);\n}\n\nexport function setAxisModifiers(motionEvent, modifiers) {\n    ExpoJoystickModule.setAxisModifiers(motionEvent, modifiers);\n}"]}